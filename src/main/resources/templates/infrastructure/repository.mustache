package {{package}};

{{#imports}}
import {{.}};
{{/imports}}
import org.springframework.data.r2dbc.repository.Query;
import org.springframework.data.repository.reactive.ReactiveCrudRepository;
import org.springframework.stereotype.Repository;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

@Repository
public interface {{name}}Repository extends ReactiveCrudRepository<{{name}}, String> {

@Query("SELECT * FROM {{tableName}} LIMIT :limit OFFSET :offset")
Flux<{{name}}> findAllByPage(int limit, int offset);

@Query("INSERT INTO {{tableName}} ({{#fields}} {{name}} {{^last}}, {{/last}} {{/fields}}) VALUES ({{#fields}} :{{name}} {{^last}}, {{/last}} {{/fields}}) RETURNING *")
Mono<{{name}}> insert({{#fields}} {{primitiveType}} {{name}} {{^last}}, {{/last}} {{/fields}});

@Query("UPDATE {{tableName}} SET {{#fields}}{{^isId}} {{name}} = :{{name}}{{^last}}, {{/last}} {{/isId}}{{/fields}} WHERE id = :id")
Mono<Integer> updateAllById({{#fields}}{{primitiveType}} {{name}} {{^last}}, {{/last}} {{/fields}});

{{#filables}}
@Query("SELECT * FROM {{tableName}} where {{name}} = :{{name}}")
Flux<{{entityName}}> getBy{{nameCapitalized}}(String {{name}});

{{/filables}}

}
